<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.aptana.ide.ui.io" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="com.aptana.ide.ui.io" id="decorator" name="Aptana Navigator Decorator"/>
      </appinfo>
      <documentation>
         This extension points allows decorators to be added to the underlying SWT Tree widget in the navigator view.  Each time a navigator is created, it will make a callback to each INavigatorDecorator found and allow them to augment or add listeners to the Tree object being used to display projects, files and folders.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="decorator" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="decorator">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  This class must have a default constructor and implement com.aptana.ide.core.ui.INavigatorDecorator.  Classes that are contributed and do not implement com.aptana.ide.core.ui.INavigatorDecorator will be ignored.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.aptana.ide.ui.io.navigator.INavigatorDecorator"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         This extension point was added in Aptana Studio 1.2
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         &lt;p&gt;
&lt;pre&gt;
&lt;extension point=&quot;com.aptana.ide.ui.io.decorator&quot;&gt;
 &lt;decorator class=&quot;com.my.xyz.decorator.MyDecorator&quot; /&gt;
&lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;

The example above contributes MyDecorator as a decorator on the navigator view.

The MyDecorator class must have a default constructor and must implement com.aptana.ide.ui.io.navigator.INavigatorDecorator.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiInfo"/>
      </appinfo>
      <documentation>
         The addDecorator(Tree tree) method will be called each time a new navigator view is opened and the createPartControl(Composite parent) is executed.
      </documentation>
   </annotation>



</schema>
